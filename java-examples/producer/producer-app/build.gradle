/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'example.producer.java-application-conventions'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

dependencies {
    // lombok is required for the generated code
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    implementation project(':kafka-support')
    implementation 'org.apache.commons:commons-text'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
}

application {
    // Define the main class for the application.
    mainClass = 'example.producer.app.App'
}

// set the source set to include the generated code
sourceSets {
    main {
        java {
            srcDir 'build/generated-sources/asyncapi'
        }
    }
}

// Task build code from local generator
tasks.register("buildApiSpecWithLocalCode", Exec) {
    it.commandLine "docker", "run",
            "--rm", "--user=root",
            "-v", "${project.projectDir}/../../../:/app/java-template", // the root project directory
            "-v", "${project.projectDir}/src/main/resources/asyncapi.yaml:/app/asyncapi.yaml",
            "-v", "${project.projectDir}/build/generated-sources/asyncapi:/app/out",
            "asyncapi/cli:2.11.0", "generate",
            "fromTemplate", "-o", "/app/out",
            "/app/asyncapi.yaml", "/app/java-template",
            "--force-write", "-p",
            "server=local", "-p", "library=spring",
            "-p", "package=example.producer.app"
}
